pipeline {
    agent any

    parameters {
        choice(name: 'action', choices: ['apply', 'destroy'], description: 'Terraform action to perform')
    }

    environment {
        AWS_DEFAULT_REGION = 'ap-south-1'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git url: 'https://github.com/divyamishra251/oneclickinfra.git', branch: 'main'
            }
        }

        stage('Terraform Init & Plan') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: 'AWS_ACCESS_KEY_ID'
                ]]) {
                    dir('terraform-postgresql-infra') {
                        sh '''
                            terraform init
                            terraform validate
                            terraform plan
                        '''
                    }
                }
            }
        }

        stage('Terraform Apply/Destroy') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: 'AWS_ACCESS_KEY_ID'
                ]]) {
                    dir('terraform-postgresql-infra') {
                        sh '''
                            terraform ${action} --auto-approve
                        '''
                    }
                }
            }
        }

        stage('Wait for Instances') {
            when {
                expression { return params.action == 'apply' }
            }
            steps {
                echo "Waiting 30 seconds for EC2 instances to be ready..."
                sleep time: 30, unit: 'SECONDS'
            }
        }

        stage('Run Ansible Role') {
            when {
                expression { return params.action == 'apply' }
            }
            steps {
                input message: 'Do you want to run the Ansible playbook?', ok: 'Yes'
                dir('ansiblerole') {
                    sh '''
                        ansible-inventory -i aws_ec2.yaml --graph
                        ansible-playbook -i aws_ec2.yaml playbook.yml
                    '''
                }
            }
        }
    }
}
